{"version":3,"sources":["webpack:///./data/colors.js","webpack:///./js/task-01.js","webpack:///./js/task-02.js","webpack:///./data/users.js","webpack:///./js/task-03.js"],"names":["refs","body","document","querySelector","startBtn","stopBtn","intervalId","randomColor","min","max","style","backgroundColor","colors","length","Math","floor","random","startChangeColor","setInterval","removeEventListener","addEventListener","clearInterval","ms","Promise","resolve","setTimeout","then","time","console","log","allUsers","userName","name","active","map","user","updatedUsers","table","makeTransaction","transaction","id","reject","logSuccess","logError","warn","amount","catch","days","hours","mins","secs","targetDate","Date","pad","value","String","padStart","now","textContent"],"mappings":"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","file":"main.103ad0eb7588176a16cd.js","sourcesContent":["export default [\n  \"#FFFFFF\",\n  \"#2196F3\",\n  \"#4CAF50\",\n  \"#FF9800\",\n  \"#009688\",\n  \"#795548\",\n];\n","import colors from \"../data/colors.js\";\n\nconst refs = {\n  body: document.querySelector(\"body\"),\n  startBtn: document.querySelector('button[data-action=\"start\"]'),\n  stopBtn: document.querySelector('button[data-action=\"stop\"]'),\n};\n\nlet intervalId = null;\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n//===\n\nconst randomColor = () => {\n  refs.body.style.backgroundColor =\n    colors[randomIntegerFromInterval(0, colors.length)];\n};\n\nconst startChangeColor = () => {\n  intervalId = setInterval(randomColor, 1000);\n  refs.startBtn.removeEventListener(\"click\", startChangeColor);\n};\n\nconst stopChangeColor = () => {\n  clearInterval(intervalId);\n  refs.startBtn.addEventListener(\"click\", startChangeColor);\n};\n\nrefs.startBtn.addEventListener(\"click\", startChangeColor);\nrefs.stopBtn.addEventListener(\"click\", stopChangeColor);\n","import users from \"../data/users.js\";\n\n//=== 2.1\nconst delay = (ms) => {\n  const promise = new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n\n  return promise;\n};\n\nconst logger = (time) => console.log(`Resolved after ${time} ms`);\n\n// Вызовы функции для проверки\n// delay(2000).then(logger); // Resolved after 2000ms\n// delay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n//=== 2.2\nconst toggleUserState = (allUsers, userName) => {\n  const promise = new Promise((resolve) => {\n    const updatedUsers = allUsers.map((user) =>\n      user.name === userName ? { ...user, active: !user.active } : user\n    );\n    resolve(updatedUsers);\n  });\n\n  return promise;\n};\n\nconst secondLogger = (updatedUsers) => console.table(updatedUsers);\n\n// toggleUserState(users, \"Mango\").then(secondLogger);\ntoggleUserState(users, \"Lux\").then(secondLogger);\n\n//=== 2.3\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  const id = transaction.id;\n  const time = randomIntegerFromInterval(200, 500);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      canProcess ? resolve({ id, time }) : reject(id);\n    }, time);\n  });\n\n  return promise;\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time} ms`);\n};\n\nconst logError = (id) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n","export default [\n  { name: \"Mango\", active: true },\n  { name: \"Poly\", active: false },\n  { name: \"Ajax\", active: true },\n  { name: \"Lux\", active: false },\n];\n","const refs = {\n  days: document.querySelector('span[data-value=\"days\"]'),\n  hours: document.querySelector('span[data-value=\"hours\"]'),\n  mins: document.querySelector('span[data-value=\"mins\"]'),\n  secs: document.querySelector('span[data-value=\"secs\"]'),\n};\n\nconst targetDate = new Date(\"Dec 28, 2020\");\nconst pad = (value) => {\n  return String(value).padStart(2, \"0\");\n};\n\nconst countDown = () => {\n  const time = targetDate - Date.now();\n\n  refs.days.textContent = Math.floor(time / (1000 * 60 * 60 * 24));\n  refs.hours.textContent = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  refs.mins.textContent = pad(\n    Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))\n  );\n  refs.secs.textContent = pad(Math.floor((time % (1000 * 60)) / 1000));\n};\n\nsetInterval(countDown, 1000);\n"],"sourceRoot":""}